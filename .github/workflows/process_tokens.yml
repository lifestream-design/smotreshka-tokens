# This is a workflow to create usable Tokens set compatible with Style Dictionary

name: CI

# Workflow triggers on push or pull request for the MASTER branch (I'm not sure for now if we will be using branches, but leaving the ability to run workflow on pull request)
# Also we will be able to run this worflow manually just in case of something happened
on:
  
  # Auto running on push terporarily disabled due to tests. Use manual run instead
  #push:
  #  branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    # Raw tokens in json file translates to different files in Style Dictionary format with token-transformer
    # token-transformer requires node.js to run 
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.0
      # Install dependencies
      - run: npm install

      # Create global Figma Tokens
      - run: npx token-transformer data/tokens.json tokens/global.json global

      # Create font styles for universal platforms, exclude the global tokens
      - run: npx token-transformer data/tokens.json tokens/font.json global,font global
      # Create font styles for tv platforms, exclude the global tokens
      - run: npx token-transformer data/tokens.json tokens/font_tv.json global,font.tv global

      # Create general visual styles for universal platforms, exclude the global tokens
      - run: npx token-transformer data/tokens.json tokens/visual_common.json global,visual.common global
      # Create light theme visual styles for universal platforms, exclude the global tokens
      - run: npx token-transformer data/tokens.json tokens/visual_theme_light.json global,visual.common,visual.theme.light global,visual.common
      # Create dark theme visual styles for universal platforms, exclude the global tokens
      - run: npx token-transformer data/tokens.json tokens/visual_theme_dark.json global,visual.common,visual.theme.dark global,visual.common

      # Create Font styles for universal platforms, exclude the global tokens (expandTypography)
      - run: npx token-transformer data/tokens.json tokens/font_expand.json global,font global --expandTypography=true
      # Create Font styles for universal platforms, exclude the global tokens (expandTypography)
      - run: npx token-transformer data/tokens.json tokens/font_tv_expand.json global,font.tv global --expandTypography=true

      # Test
      # - run: npx token-transformer data/tokens.json tokens/common_measures.json global,common.measures global

      # Convert tokens according to Style Dictionary config
      - run: node build.js
      # Add files that were created during a run, e.g. created files from style dictionary or token-transformer.
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Create Style Dictionary tokens

      # Install Supernova CLI
      - name: Install Supernova CLI dependency
        run: npm install --g @supernovaio/cli

      # Sync tokens
      - name: Synchronize tokens with Supernova 
        run: supernova sync-tokens \
        --apiKey=sn.NUZuKPm4P4vke1bcI5CSlytzNrFf3KDwFmAMPqrJxDpz8XnkYAfIDeCCOndroiUJod4YmB8p4iogHt3dvUQ4LzYTS4nEK5xE \
        --designSystemId=22485 \
        --tokenFilePath="${{ github.workspace }}/data/tokens.json" \
        --configFilePath="${{ github.workspace }}/data/supernova.settings.json" \
